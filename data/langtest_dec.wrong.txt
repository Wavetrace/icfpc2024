(((((( lambda n3.( lambda n3.( lambda n3.( lambda n2.n3  )  )  )  )  $ 1 )  $ 2 )  $ 3 )  $ 4 )  = 3 )  ? 
 ((( lambda n3.n3  )  $ 10 )  = 10 )  ? 
  ((3  D "test" )  = "t" )  ? 
   ((3  T "test" )  = "tes" )  ? 
    (("te"  . "st" )  = "test" )  ? 
     !(T  & F )   ? 
      (T  & T )  ? 
       !(F  | F )   ? 
        (F  | T )  ? 
         (-3   < -2  )  ? 
          (3  > 2 )  ? 
           (-1   = (-3   % 2 ) )  ? 
            (1  = (7  % 3 ) )  ? 
             (-1   = (-3   / 2 ) )  ? 
              (2  = (7  / 3 ) )  ? 
               (6  = (2  * 3 ) )  ? 
                (3  = (1  + 2 ) )  ? 
                 ($15319072   = "test" )  ? 
                  (#"test"   = 15319072 )  ? 
                   !F   ? 
                    (-3   = (2  - 5 ) )  ? 
                     (3  = (5  - 2 ) )  ? 
                      ("test"  = "test" )  ? 
                       (F  = F )  ? 
                        (3  = 3 )  ? 
                         T  ? 
                          (("Self-check OK, send `solve language_test "  . $(2  + (308  * 118333201147 ) )  )  . "` to claim points for it" )  : 
                          "if is not correct"   : 
                         "binary = is not correct"   : 
                        "binary = is not correct"   : 
                       "binary = is not correct"   : 
                      "binary - is not correct"   : 
                     "unary - is not correct"   : 
                    "unary ! is not correct"   : 
                   "unary # is not correct"   : 
                  "unary $ is not correct"   : 
                 "binary + is not correct"   : 
                "binary * is not correct"   : 
               "binary / is not correct"   : 
              "binary / is not correct"   : 
             "binary % is not correct"   : 
            "binary % is not correct"   : 
           "binary > is not correct"   : 
          "binary < is not correct"   : 
         "binary | is not correct"   : 
        "binary | is not correct"   : 
       "binary & is not correct"   : 
      "binary & is not correct"   : 
     "binary . is not correct"   : 
    "binary T is not correct"   : 
   "binary D is not correct"   : 
  "application is not correct"   : 
 "application is not correct"  